apiVersion: 1.0.0
metadata:
  generateName: vertx-health-checks-
projects:
  - name: vertx-health-checks-example-redhat
    source:
      type: zip
      location: 'https://github.com/fasho/console-java-simple.git'
components:
  - type: chePlugin
    id: redhat/java8/latest
  - type: dockerimage
    alias: maven
    image: "registry.redhat.io/codeready-workspaces/stacks-java-rhel8@sha256:7d0f9205cf0cdf8894a7eb4adfd99fbba437297990306fb79cc74f33796d5fca" # tag: registry.redhat.io/codeready-workspaces/stacks-java-rhel8:2.1
    env:
      - name: JAVA_OPTS
        value: -XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
          -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom
          -Duser.home=/home/jboss
      - name: MAVEN_OPTS
        value: $(JAVA_OPTS)
    memoryLimit: 512Mi
    mountSources: true
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
    endpoints:
      - name: health-checks-endpoint
        port: 8080
commands:
  - name: Build
    actions:
      - type: exec
        component: maven
        command: mvn clean install
        workdir: ${CHE_PROJECTS_ROOT}/vertx-health-checks-example-redhat
  - name: Build and run
    actions:
      - type: exec
        component: maven
        command: mvn clean install && mvn -Dvertx.disableDnsResolver=true vertx:run
        workdir: ${CHE_PROJECTS_ROOT}/vertx-health-checks-example-redhat
  - name: Run in debug mode
    actions:
      - workdir: ${CHE_PROJECTS_ROOT}/vertx-health-checks-example-redhat
        type: exec
        command: mvn -DskipTests vertx:debug
        component: maven
  - name: Run tests
    actions:
      - workdir: ${CHE_PROJECTS_ROOT}/vertx-health-checks-example-redhat
        type: exec
        command: mvn verify
        component: maven
  - name: Deploy to OpenShift
    actions:
      - workdir: ${CHE_PROJECTS_ROOT}/vertx-health-checks-example-redhat
        type: exec
        command: mvn fabric8:deploy -Popenshift -DskipTests -Dvertx.disableDnsResolver=true
        component: maven
  - name: Dependency analysis
    actions:
      - type: exec
        component: maven
        command: ${HOME}/stack-analysis.sh -f ${CHE_PROJECTS_ROOT}/vertx-health-checks-example-redhat/pom.xml
          -p ${CHE_PROJECTS_ROOT}/vertx-health-checks-example-redhat
  - name: Attach remote debugger
    actions:
      - type: vscode-launch
        referenceContent: "{\n\"version\": \"0.2.0\",\n\"configurations\": [\n{\n\
          \    \"type\": \"java\",\n    \"request\": \"attach\",\n    \"name\": \"\
          Debug (Attach)\",\n    \"hostName\": \"localhost\",\n    \"port\": 5005\n\
          }\n]\n}\n"
